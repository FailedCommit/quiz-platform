version: '3.7'

services:
  quiz-service:
    build: quizservice/.
    container_name: quizservice
    ports:
      - "8090:8090"
    depends_on:
      - quiz-db
    networks:
      - app-net

  quiz-db:
    container_name: quiz-db
    image: mongo
    volumes:
      - /tmp/database/mongodb:/data/db
    ports:
      - "27017:27017"
    restart: always
    networks:
      - app-net

  user-service:
    build: userservice/.
    container_name: userservice
    ports:
      - "8091:8091"
    depends_on:
      - user-db
    environment:
      - DATABASE_HOST=user-db
      - DATABASE_NAME=user-db
      - DATABASE_PORT=3306
    networks:
      - app-net

  user-db:
    container_name: user-db
    image: mysql
    environment:
      - MYSQL_DATABASE=user-db
      - MYSQL_ALLOW_EMPTY_PASSWORD=true
    volumes:
      - /tmp/database/mysql:/data
    ports:
      - "3306:3306"
    restart: always
    networks:
      - app-net


# Kafka

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

networks:
  app-net:
    name: nat